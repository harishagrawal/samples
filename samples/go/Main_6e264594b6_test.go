// Test generated by RoostGPT for test roost-go using AI Type Open AI and AI Model gpt-4

package main

import (
	"fmt"
	"testing"
)

type Shape interface {
	Area() float64
}

type Rectangle struct {
	width, height float64
}

func (r *Rectangle) CalculateArea() {
	r.width = r.width * r.height
}

func (r *Rectangle) Area() float64 {
	return r.width
}

type Square struct {
	side float64
}

func (s *Square) CalculateArea() {
	s.side = s.side * s.side
}

func (s *Square) Area() float64 {
	return s.side
}

func main() {
	rect := &Rectangle{width: 16, height: 6} //set the width and height of square
	rect.CalculateArea()
	fmt.Println("Area of rectangle: ", rect.Area()) //print area of rectangle

	sq := &Square{side: 8} //set side of square
	sq.CalculateArea()
	fmt.Println("Area of square: ", sq.Area()) //print area of square.
}

func TestMain_6e264594b6(t *testing.T) {
	rect := &Rectangle{width: 16, height: 6} //set the width and height of square
	rect.CalculateArea()
	if rect.Area() != 96 {
		t.Error("Expected Rectangle Area to be 96, but got ", rect.Area())
	}

	sq := &Square{side: 8} //set side of square
	sq.CalculateArea()
	if sq.Area() != 64 {
		t.Error("Expected Square Area to be 64, but got ", sq.Area())
	}
}
